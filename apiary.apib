HOST: http://huntjs.herokuapp.com/

--- Embedded routes for authorization strategies ---


-- Default redirect routes

Success authorization. By default, if user present, it sets flash.success message of `Welcome to our site, Username!` and redirects to /. This route can be redefined by https://huntjs.herokuapp.com/documentation/Hunt.html#extendRoutes
GET /auth/success
< 302

Failure authorization. By default, if not present,  it sets flash.error message of `Authorization failed!` and redirects to /. This route can be redefined by https://huntjs.herokuapp.com/documentation/Hunt.html#extendRoutes
GET /auth/failure
< 302


-- User authorization API via local strategy


Authorize via Username/email and password
POST /auth/login
> Content-Type: application/json; charset=utf-8
{ "username": "myLogin", "password":"myPassword"}
< 302
< Location: /auth/success
+++++
< 302
< Location: /auth/failure


Check, that email is not in use
POST /auth/isBusy
> Content-Type: application/json; charset=utf-8
{ "email": "myemail@example.org"}
< 200
< Content-Type: application/json; charset=utf-8
{ "isBusy":true }
+++++
< 200
< Content-Type: application/json; charset=utf-8
{ "isBusy":false }


SignUp via email and password
POST /auth/signup
> Content-Type: application/json; charset=utf-8
{ "email": "myemail@example.org", "password":"myPassword"}
< 302
< Location: /auth/success
+++++
< 302
< Location: /auth/failure
+++++
< 400



-- User authorization API via Facebook Passport.js strategy --

Authorization
GET /auth/facebook
< 302


Callback for authorization
GET /auth/facebook/callback
< 302


-- User authorization API via Github oAuth Passport.js strategy --

Authorization. Tokens can be acquired here - https://github.com/settings/applications
GET /auth/github
< 302


Callback for authorization
GET /auth/github/callback
< 302


-- User authorization API via Google OpenId Passport.js strategy --

Authorization
GET /auth/google
< 302


Callback for authorization
GET /auth/google/callback
< 302



-- User authorization API via Intuit OpenId Passport.js strategy --

Authorization
GET /auth/intuit
< 302


Callback for authorization
GET /auth/intuit/callback
< 302


-- User authorization API via Paypal OpenId Passport.js strategy --

Authorization
GET /auth/paypal
< 302


Callback for authorization
GET /auth/paypal/callback
< 302


-- User authorization API via Steam OpenId Passport.js strategy --

Authorization
GET /auth/steam
< 302


Callback for authorization
GET /auth/steam/callback
< 302


-- User authorization API via Twitter oAuth Passport.js strategy --

Authorization. Tokens can be acquired here - https://dev.twitter.com/
GET /auth/steam
< 302


Callback for authorization
GET /auth/steam/callback
< 302


-- User authorization API via Vk.com oAuth Passport.js strategy --

Authorization. Tokens can be acquired here - https://vk.com/dev
GET /auth/vk
< 302


Callback for authorization
GET /auth/vk/callback
< 302


-- User authorization API via Yahoo OpenID strategy --

Authorization
GET /auth/yahoo
< 302


Callback for authorization
GET /auth/yahoo/callback
< 302


-- User authorization API via Facebook oAuth Passport.js strategy --

Authorization. Tokens can be acquired here - https://developers.facebook.com/
GET /auth/facebook
< 302


Callback for authorization
GET /auth/facebook/callback
< 302
